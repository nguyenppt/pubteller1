#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankProject.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bisolutions_vvcb")]
	public partial class BankProjectModelsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBCOUNTRY(BCOUNTRY instance);
    partial void UpdateBCOUNTRY(BCOUNTRY instance);
    partial void DeleteBCOUNTRY(BCOUNTRY instance);
    #endregion
		
		public BankProjectModelsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["VietVictoryCoreBanking"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BankProjectModelsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankProjectModelsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankProjectModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankProjectModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BCOUNTRY> BCOUNTRies
		{
			get
			{
				return this.GetTable<BCOUNTRY>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BCOUNTRY")]
	public partial class BCOUNTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaQuocGia;
		
		private string _TenTA;
		
		private string _TenTV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuocGiaChanging(string value);
    partial void OnMaQuocGiaChanged();
    partial void OnTenTAChanging(string value);
    partial void OnTenTAChanged();
    partial void OnTenTVChanging(string value);
    partial void OnTenTVChanged();
    #endregion
		
		public BCOUNTRY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuocGia", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaQuocGia
		{
			get
			{
				return this._MaQuocGia;
			}
			set
			{
				if ((this._MaQuocGia != value))
				{
					this.OnMaQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaQuocGia = value;
					this.SendPropertyChanged("MaQuocGia");
					this.OnMaQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTA", DbType="NVarChar(100)")]
		public string TenTA
		{
			get
			{
				return this._TenTA;
			}
			set
			{
				if ((this._TenTA != value))
				{
					this.OnTenTAChanging(value);
					this.SendPropertyChanging();
					this._TenTA = value;
					this.SendPropertyChanged("TenTA");
					this.OnTenTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTV", DbType="NVarChar(100)")]
		public string TenTV
		{
			get
			{
				return this._TenTV;
			}
			set
			{
				if ((this._TenTV != value))
				{
					this.OnTenTVChanging(value);
					this.SendPropertyChanging();
					this._TenTV = value;
					this.SendPropertyChanged("TenTV");
					this.OnTenTVChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
